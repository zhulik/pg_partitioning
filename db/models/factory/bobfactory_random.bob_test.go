// Code generated by BobGen psql v0.38.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import (
	"bytes"
	"testing"

	"github.com/stephenafamo/bob"
)

// Set the testDB to enable tests that use the database
var testDB bob.Transactor

func TestRandom_int32(t *testing.T) {
	t.Parallel()

	val1 := random_int32(nil)
	val2 := random_int32(nil)

	if val1 == val2 {
		t.Fatalf("random_int32() returned the same value twice: %v", val1)
	}
}

func TestRandom_string(t *testing.T) {
	t.Parallel()

	val1 := random_string(nil)
	val2 := random_string(nil)

	if val1 == val2 {
		t.Fatalf("random_string() returned the same value twice: %v", val1)
	}
}

func TestRandom_time_Time(t *testing.T) {
	t.Parallel()

	val1 := random_time_Time(nil)
	val2 := random_time_Time(nil)

	if val1.Equal(val2) {
		t.Fatalf("random_time_Time() returned the same value twice: %v", val1)
	}
}

func TestRandom_types_JSON_json_RawMessage_(t *testing.T) {
	t.Parallel()

	val1 := random_types_JSON_json_RawMessage_(nil)
	val2 := random_types_JSON_json_RawMessage_(nil)

	if bytes.Equal(val1.Val, val2.Val) {
		t.Fatalf("random_types_JSON_json_RawMessage_() returned the same value twice: %v", val1)
	}
}

func TestRandom_uuid_UUID(t *testing.T) {
	t.Parallel()

	val1 := random_uuid_UUID(nil)
	val2 := random_uuid_UUID(nil)

	if val1 == val2 {
		t.Fatalf("random_uuid_UUID() returned the same value twice: %v", val1)
	}
}
